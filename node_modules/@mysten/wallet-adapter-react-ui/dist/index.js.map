{"version":3,"sources":["../src/index.ts","../src/ConnectWalletModal.tsx","../src/ManageWalletModal.tsx","../src/WalletWrapper.tsx"],"sourcesContent":["// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nexport * from './ConnectWalletModal';\nexport * from './ManageWalletModal';\nexport * from './WalletWrapper';\n","// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport {\n  Box,\n  Button,\n  List,\n  Modal,\n  Typography,\n  ListItemButton,\n  ListItemText,\n  CircularProgress,\n} from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useWallet } from \"@mysten/wallet-adapter-react\";\n\nexport interface ConnectWalletButtonProps {}\n\nexport function ConnectWalletModal(props: ConnectWalletButtonProps) {\n  let { connected } = useWallet();\n\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const { wallets, wallet, select, connecting } = useWallet();\n\n  const handleConnect = (walletName: string) => {\n    select(walletName);\n    handleClose();\n  };\n\n  const style = {\n    position: \"absolute\" as \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: 300,\n    bgcolor: \"background.paper\",\n    border: \"2px solid #000\",\n    boxShadow: 24,\n    p: 4,\n    borderRadius: 2,\n  };\n\n  const connectButtonStyle = {\n    borderRadius: 7,\n    backgroundColor: \"#6fbcf0\",\n    fontWeight: 600,\n  };\n\n  return (\n    <>\n      {!connected && (\n        <>\n          <Button\n            style={connectButtonStyle}\n            variant=\"contained\"\n            onClick={handleClickOpen}\n          >\n            Connect To Wallet\n          </Button>\n          <Modal open={open} onClose={handleClose}>\n            <>\n              {!connecting && (\n                <Box sx={style}>\n                  <Typography\n                    id=\"modal-modal-title\"\n                    variant=\"h6\"\n                    component=\"h2\"\n                    align=\"center\"\n                  >\n                    Select Wallet\n                  </Typography>\n                  <List>\n                    {wallets.map((wallet, i) => (\n                      <ListItemButton\n                        key={i}\n                        onClick={() => handleConnect(wallet.name)}\n                      >\n                        <ListItemText primary={wallet.name} />\n                      </ListItemButton>\n                    ))}\n                  </List>\n                </Box>\n              )}\n              {connecting && (\n                <Box sx={style}>\n                  <Typography\n                    id=\"modal-modal-title\"\n                    variant=\"h6\"\n                    component=\"h2\"\n                  >\n                    Connecting to {wallet ? wallet.name : \"Wallet\"}\n                  </Typography>\n                  <CircularProgress />\n                </Box>\n              )}\n            </>\n          </Modal>\n        </>\n      )}\n    </>\n  );\n}\n","// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\nimport {\n  Box,\n  Button,\n  List,\n  Modal,\n  Typography,\n  ListItemButton,\n  ListItemText,\n} from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useWallet } from \"@mysten/wallet-adapter-react\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\n\nexport interface ManageWalletButtonProps {}\n\nexport function ManageWalletModal(props: ManageWalletButtonProps) {\n  let { connected, disconnect, wallet, getAccounts } = useWallet();\n  const [open, setOpen] = useState(false);\n  const [account, setAccount] = useState(\"\");\n  const PK_DISPLAY_LENGTH = 10;\n\n  useEffect(() => {\n    if (!connected) return;\n\n    getAccounts().then((accounts) => {\n      if (accounts && accounts.length) {\n        setAccount(accounts[0]);\n      }\n    });\n  }, [wallet, connected, getAccounts]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClickDisconnect = () => {\n    disconnect();\n    setOpen(false);\n  };\n\n  const handleClose = (value: string) => {\n    setOpen(false);\n  };\n\n  const style = {\n    position: \"absolute\" as \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: 300,\n    bgcolor: \"background.paper\",\n    border: \"2px solid #000\",\n    boxShadow: 24,\n    p: 4,\n    borderRadius: 2,\n  };\n\n  const ManageWalletButtonStyle = {\n    borderRadius: 7,\n    backgroundColor: \"#6fbcf0\",\n    fontWeight: 600,\n  };\n\n  const handleCopyAddress = () => {\n    navigator.clipboard.writeText(account);\n  };\n\n  return (\n    <>\n      {connected && wallet && (\n        <>\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            style={ManageWalletButtonStyle}\n            onClick={handleClickOpen}\n          >\n            <SettingsIcon /> {account.slice(0, PK_DISPLAY_LENGTH)}...\n          </Button>\n          <Modal open={open} onClose={handleClose}>\n            <Box sx={style}>\n              <Typography\n                id=\"modal-modal-title\"\n                variant=\"h6\"\n                component=\"h2\"\n              ></Typography>\n              <List>\n                <ListItemButton onClick={handleClickDisconnect}>\n                  <ListItemText primary={\"Disconnect\"} />\n                </ListItemButton>\n                <ListItemButton onClick={handleCopyAddress}>\n                  <ListItemText primary={\"Copy Address\"} />\n                </ListItemButton>\n              </List>\n            </Box>\n          </Modal>\n        </>\n      )}\n    </>\n  );\n}\n","// Copyright (c) Mysten Labs, Inc.\n// SPDX-License-Identifier: Apache-2.0\n\n/*\n * Wraps around all UI components for the Wallet Adapter.\n * Import this component where you desire your \"Connect Wallet\" button to be.\n */\n\nimport { createTheme, ThemeProvider } from \"@mui/material\"\nimport { ConnectWalletModal } from \"./ConnectWalletModal\"\nimport { ManageWalletModal } from \"./ManageWalletModal\"\n\n\nconst theme = createTheme({\n    typography: {\n        \"fontFamily\": `\"IBM Plex Sans\", sans-serif`,\n    }\n})\n\nexport function WalletWrapper({}) {\n    return(\n        <>\n            <ThemeProvider theme={theme}>\n                <ConnectWalletModal/>\n                <ManageWalletModal/>\n            </ThemeProvider>\n        </>\n    )\n}"],"mappings":"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","names":["wallet","import_material","import_react","import_wallet_adapter_react","SettingsIcon","import_material"]}